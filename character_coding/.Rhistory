library("nycflights13")
flights
flights$dep_time
mean(flights$dep_time)
class(flights$dep_time)
class(flights$dep_delay)
mean(flights$dep_delay)
mean(as.numeric(flights$dep_delay))
flights$dep_delay %<>% sapply(as.numeric)
flights$dep_delay
flights$dep_delay %>% meN
flights$dep_delay %>% mean()
flights$dep_delay
flights$dep_delay %>% mean
flights$dep_delay %>% which(!(.<2000 | .>-2000))
flights$dep_delay %>% which(.,!(.<2000 | .>-2000))
flights$dep_delay %>% .!(.<2000 | .>-2000)
flights$dep_delay %>% between(-2000,2000)
flights$dep_delay %>% between(-2000,2000) %>% .[which(.==FALSE)]
flights$dep_delay %>% .[which(!(is.numeric(.)))]
?group_by
iris %>% group_by(Species)
iris %>% group_by(Species) -> a
a
a$Species
a
a  %>% summary
a  %>% summarise()
View(a)
1 == 0
1:5[==3]
1:5 %>% .[.==3]
library(ggplot2)
library(magrittr)
library(tidyverse)
library(plotly)
1:5 %>% .[.==3]
1:5 %>% .[.!=3]
runif(1,6) %>% .[.!=3]
100 %>% runif(1,6) %>% .[.!=3]
100 %>% runif(1,6) %>% .[.<3]
10 %>% runif(1,6) %>% .[.<3]
10 %>% runif(1,6) %>% .[.<3]
10 %>% runif(1,6) %>% .[.<3]
10 %>% runif(1,6) %>% .[.<3] %>% summary()
100 %>% runif(1,6) %>% .[.<3] %>% summary()
100 %>% runif(1,6) %>% .[.<3] %T>% plot %>% summary()
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = cyl), binwidth = 0.5)
mtcras
mtcars
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = wt), binwidth = 0.5)
mtcars %>% cut_width(.$wt)
mtcars %>% cut_width() %>% count
mtcars %>% cut_width(wt, 0.5) %>% count
mtcars %>% sapply(as.numeric) %>% cut_width(wt, 0.5) %>% count
mtcars %>% cut_width(wt, 0.5) %>% count
mtcars$wt %>% class
mtcars %>% cut_width(wt, 0.1) %>% count
mtcars %>% ggplot() + geom_freqpoly(binwidth = 0.1)
mtcars %>% ggplot(mapping = aes(x = wt)) + geom_freqpoly(binwidth = 0.1)
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = wt), binwidth = 0.5) + coord_cartesian(ylim = c(0, 50))
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = wt), binwidth = 0.5) + coord_cartesian(ylim = c(0, 100))
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = wt), binwidth = 0.5) + coord_cartesian(ylim = c(0, 20))
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = wt), binwidth = 0.5) + coord_cartesian(ylim = c(0, 8))
mtcars %>% ggplot(mapping = aes(x = wt)) + geom_freqpoly(binwidth = 0.1)
mtcars
mtcars %>% ggplot(mapping = aes(x = wt, color = am)) + geom_freqpoly(binwidth = 0.1)
mtcars %>% ggplot(mapping = aes(x = wt)) + geom_freqpoly(mapping = aes(color = am), binwidth = 0.1)
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = wt), binwidth = 5) + coord_cartesian(ylim = c(0, 8))
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = wt), binwidth = .1) + coord_cartesian(ylim = c(0, 8))
mtcars %>% ggplot(mapping = aes(x = wt)) + geom_freqpoly(mapping = aes(color = am), binwidth = 0.4)
mtcars %>% ggplot(mapping = aes(x = wt)) + geom_freqpoly(mapping = aes(color = gear), binwidth = 0.4)
mtcars %>% ggplot(mapping = aes(x = wt)) + geom_freqpoly(mapping = aes(colour = gear), binwidth = 0.4)
mtcars %>% ggplot(mapping = aes(x = wt)) + geom_freqpoly(mapping = aes(colour = as.factor(gear)), binwidth = 0.4)
geom_boxplot()
mtcars %>% ggplot(mapping = aes(x = cyl, y = wt)) + geom_boxplot()
mtcars %>% ggplot(mapping = aes(x = cyl, y = wt, group = as.factor(gear))) + geom_boxplot()
mtcars %>% ggplot(mapping = aes(y = wt, group = as.factor(gear))) + geom_boxplot()
mtcars %>% ggplot(mapping = aes(x = wt, group = as.factor(gear))) + geom_boxplot()
mtcars %>% ggplot() + geom_boxplot(mapping = aes(x = wt, group = as.factor(gear)))
mtcars %>% ggplot() + geom_boxplot(mapping = aes(y = wt, group = as.factor(gear)))
mtcars %>% ggplot(mapping = aes(x = cyl, y = wt, group = as.factor(gear))) + geom_boxplot()
mtcars %>% ggplot(mapping = aes(x = cyl, y = wt, group = as.factor(cyl))) + geom_boxplot()
mtcars %>% ggplot(mapping = aes(x = cyl, y = wt, group = as.factor(cyl))) + geom_boxplot() + coord_flip()
mpg
mpg %>% ggplot() + geom_count(mapping = aes(x = model, y = trans))
mpg %>% ggplot() + geom_count(mapping = aes(x = cyl, y = trans))
mpg %>% ggplot() + geom_count(mapping = aes(x = cyl, y = trans, color = drv))
geom_tile(mapping = aes(fill = n))
mpg %>% count(cyl, trans) %>% ggplot(mapping = aes(x = cyl, y = trans)) + geom_tile(mapping = aes(fill = n))
mpg %>% count(cyl, trans) %>% ggplot(mapping = aes(x = cyl, y = trans), xlim(4,8)) + geom_tile(mapping = aes(fill = n))
mpg %>% count(cyl, trans) %>% ggplot(mapping = aes(x = cyl, y = trans), xlim(4.5,7.5)) + geom_tile(mapping = aes(fill = n))
mpg %>% filter(cyl!=7) count(cyl, trans) %>% ggplot(mapping = aes(x = cyl, y = trans)) + geom_tile(mapping = aes(fill = n))
mpg %>% filter(cyl!=7) %>% count(cyl, trans) %>% ggplot(mapping = aes(x = cyl, y = trans)) + geom_tile(mapping = aes(fill = n))
head(mpg)
mpg %>% ggplot(mapping = aes(x = cty, y = hwy))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_point()
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_point() + geom_smooth()
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_point() + geom_smooth(method = gam)
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_point() + geom_smooth(method = "gam")
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_point() + geom_smooth(method = "glm")
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_point() + geom_smooth(method = "gam")
mpg %>% ggplot(mapping = aes(x = cty, y = hwy, alpha = 1 / 10)) + geom_point() + geom_smooth(method = "gam")
mpg %>% ggplot(mapping = aes(x = cty, y = hwy, alpha = 1 / 100)) + geom_point() + geom_smooth(method = "gam")
mpg %>% ggplot(mapping = aes(x = cty, y = hwy, alpha = 1 / 5)) + geom_point() + geom_smooth(method = "gam")
mpg %>% ggplot() + geom_bin2d(mapping = aes(x = cty, y = hwy))
install.packages("hexbin")
library("hexbin")
mpg %>% ggplot() + geom_hex(mapping = aes(x = cty, y = hwy))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 5)))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 2)))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 10)))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 6)))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 5)))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 8)))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 9)))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 10)))
library(modelr)
library(ggplot2)
library(magrittr)
library(tidyverse)
library(plotly)
library(hexbin)
library(modelr)
my.string
c(4, 5, 90, 3) %>% .[1] %>% multiply_by(2) %>% plot
mtcars[,2:3] %>% ggplot + geom_point(mapping=aes(x=cyl, y=disp, color = cyl))
mtcars[,2:3] %>% ggplot + geom_point(mapping=aes(x=cyl, y=disp, color = cyl))
mtcars %>% ggplot + geom_point(mapping = aes(x = disp, y = cyl, color = vs)) + facet_wrap(~ gear, nrow = 2) + geom_smooth(aes(x = disp, y = cyl, stroke = carb))
mpg %>% ggplot() + geom_hex(mapping = aes(x = cty, y = hwy))
mpg %>% ggplot() + geom_bin2d(mapping = aes(x = cty, y = hwy))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 10)))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy, alpha = 1 / 5)) + geom_point() + geom_smooth(method = "gam")
mpg %>% ggplot(mapping = aes(x = cty, y = hwy, alpha = 1 / 5)) + geom_point() + geom_smooth(method = "loess")
mpg %>% ggplot(mapping = aes(x = cty, y = hwy, alpha = 1 / 5)) + geom_point() + geom_smooth(method = "loess") + geom_hex(mapping = aes(x = cty, y = hwy))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy, alpha = 1 / 5))  + geom_smooth(method = "loess") + geom_hex(mapping = aes(x = cty, y = hwy))
library(magrittr)
library(tidyverse)
library(hexbin)
library(forcats)
library(lubridate)
library(purrr)
library(broom)
c(4, 5, 90, 3) %>% .[1] %>% multiply_by(2) %>% plot
my.string <- c(4, 5, 8, 100)
my.string
mtcars %>% .$cyl %>% between(4,6) %>% rownames(mtcars)[.]
mtcars %>% ggplot + geom_point(mapping = aes(x = disp, y = cyl, color = vs)) + facet_wrap(~ gear, nrow = 2) + geom_smooth(aes(x = disp, y = cyl, stroke = carb))
mtcars[,2:3] %>% ggplot + geom_point(mapping=aes(x=cyl, y=disp, color = cyl))
mpg[8:9] %>% sapply(as.numeric) %>% cor
iris %>% summary
iris %>% filter(Petal.Length<1.9, Petal.Width<0.6) %>% .[,1:2] %>% plot()
iris$Sepal.Length %>% summary
100 %>% runif(1,6) %>% .[.<3] %T>% plot %>% summary()
mtcars %>% ggplot() + geom_histogram(mapping = aes(x = wt), binwidth = .1) + coord_cartesian(ylim = c(0, 8))
mtcars %>% ggplot(mapping = aes(x = wt)) + geom_freqpoly(mapping = aes(colour = as.factor(gear)), binwidth = 0.4)
#mtcars %>% cut_width(wt, 0.1) %>% count
mtcars %>% ggplot(mapping = aes(x = cyl, y = wt, group = as.factor(cyl))) + geom_boxplot() + coord_flip()
mpg %>% ggplot() + geom_count(mapping = aes(x = cyl, y = trans, color = drv))
mpg %>% filter(cyl!=7) %>% count(cyl, trans) %>% ggplot(mapping = aes(x = cyl, y = trans)) + geom_tile(mapping = aes(fill = n))
mpg %>% ggplot(mapping = aes(x = cty, y = hwy, alpha = 1 / 5))  + geom_smooth(method = "loess") + geom_hex(mapping = aes(x = cty, y = hwy))
mpg %>% ggplot() + geom_bin2d(mapping = aes(x = cty, y = hwy))
mpg %>% ggplot() + geom_hex(mapping = aes(x = cty, y = hwy))
ggsave("Downloads/mpgHex.pdf")
mpg %>% ggplot(mapping = aes(x = cty, y = hwy)) + geom_boxplot(mapping = aes(group = cut_width(cty, 10)))
as_tibble(iris) %T>%  print(n=3, width = 50) %>% .[[1]]
tribble(
~x, ~y, ~z,
#--|--|----
"a", 2, 3.6,
"b", 1, 8.5,
`c`, 4, 8
) %>% View
read.csv("Documents/VisualLife_Data/tips.csv", sep = '\t') %>% View
read_csv("Documents/VisualLife_Data/taxtable_prototype.csv") %>% View
"2x7648367a269264x472694x62a364" %>% charToRaw %>% guess_encoding()
"2764836726926447269462364" %>% charToRaw %>% parse_character()
c("apple", "banana") %>% parse_factor(c("apple", "banana", "yam"), levels = .)
read.csv("Documents/VisualLife_Data/tips.csv", sep = '\t') %>% gather(key=X) -> tipsmolten
c("spp","traits") -> names(tipsmolten)[1:2]
tipsmolten %>% spread(spp, value = value) %>% View
tipsmolten %>% spread(traits, value = value) %>% View
table3 %T>% print %>% separate(rate, c("cases", "pop"))
table5 %T>% print %>% unite(wholeyear, century, year, sep="")
tipsmolten %>% complete(spp, traits) %>% filter(is.na(value)) %>% View
library(nycflights13)
planes %>%
count(tailnum) %>%
filter(n > 1) %>% View
left_join(mpg,mtcars) %>% View
"peter pan" %T>% print %>% writeLines
"peter pan" %>% str_length
paste("mother", "tata", "pili", "pala", sep="_")
str_c("mother", "tata", "pili", "pala", sep="_")
str_c("head-", c('ABC', 'EDA', 'TTRT'), "-tail")
fruit %>% str_view("rry$")
fruit %>% str_detect("ee") %>% fruit[.]
fruit %>% str_subset("^e")
fruit %>% str_count("r")
sentences %>% str_subset("start|stop") %>% str_extract("start|stop")
sentences %>% str_extract("start|stop")
sentences %>% str_subset("start|stop") %>% str_view_all("it|the")
sentences %>% str_subset("start|stop") %>%
str_extract_all("start|stop", simplify=T)
sentences %>% str_match("the")
words %>% str_replace("[aeiou]", "-")
words %>% str_replace_all("[aeiouy]", "-")
words %>% str_replace_all(c("w" = "ohw", "ee" = "ii", "s" = "sh"))
sentences %>% str_split(" ")
sentences %>% str_view_all(boundary("word"))
sentences %>% str_split(boundary("word"))
apropos("replace")
c("Dec", "Apr", "Jan", "Mar") %>% sort
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
c("Dec", "Apr", "Jan", "Mar") %>% factor(month_levels)
c("Dec", "Apr", "Jan", "Mar") %>% factor(unique(.))
gss_cat %>% count("marital") %>% plot
gss_cat %>% ggplot(aes(relig)) + geom_bar(aes(fill = partyid))
gss_cat %>% group_by(relig) %>% ggplot(aes(tvhours, fct_reorder(relig, tvhours))) + geom_point()
gss_cat %>% mutate(religion = fct_lump(.$relig, n = 3)) %>% count("religion") %>% plot
today() %>% wday()
now() %>% yday()
year(now())
month(today()) %>% month_levels[.] %>% str_c("ember")
ymd_hm(199107021105)
today() - ymd(19910702)
lubridate::as.duration(100000)
flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year, month, day, hour, minute)) %>%
ggplot(aes(departure)) +
geom_freqpoly(binwidth = 86400)
flights %>%    #in the day 2013-01-02
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year, month, day, hour, minute)) %>%
filter(departure < ymd(20130102)) %>%
ggplot(aes(departure)) +
geom_freqpoly(binwidth = 1000)
mtcars %$% cor(disp, mpg)
rescale01 <- function(x) {
rng <- range(x, na.rm = TRUE)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale01(c(0, 5, 21, 30))
c(0, 5, 21, 30) %>% range
has_name <- function(x) {
nms <- names(x)
if (is.null(nms)) {
rep(FALSE, length(x))
} else {
!is.na(nms) & nms != ""
}
}
has_name(month_levels)
toeinwater <- function(temp) {
if (temp <= 0) {"freezing" }
else if (temp <= 10) {"cold" }
else if (temp <= 20) {"cool" }
else if (temp <= 30) {"warm" }
else {"hot" }
}
runif(1, -5, 50) %T>% print %>% toeinwater %>% str_split("")
commas <- function(...) stringr::str_c(..., collapse = ", ")
commas(words)
class(letters)
typeof(letters)
seq_along(mtcars)
1:length(mtcars)
output <- vector("double", ncol(df))  # 1. output
for (i in seq_along(df)) {            # 2. sequence
output[[i]] <- median(df[[i]])      # 3. body
}
output
unlist(list(a = c(1,2), b = c(3,4)))
iris[-5] %>% map_dbl(mean)
iris[-5] %>% map_int(length)
mtcars %>% split(.$cyl)
mtcars %>% map
mtcars %>%
split(.$cyl) %>%
purrr::map(~lm(mpg ~ wt, data = .)) -> models
mtcars %>%
split(.$cyl) %>%
purrr::map(~aov(mpg ~ as.factor(carb), data = .))
models %>% purrr::map(summary) %>% map_dbl("r.squared")
models %>% lapply(summary)
c(4,16,80, 25, -1) %>% sapply(rnorm, n=10)
means = c(4,16,80, 25, -1)
sds = c(1,3,17,5,0.7)
ns = c(10,11,12,40,50)
map2(sds, means, rt, n=12)
args <- list(mean = means, sd = sds, n = ns)
args %>% pmap(rnorm) %>% map_dbl(median)
params = list(
list(mean = 10, sd = 3),
list(lambda = 10),
list(df = 5),
list(min=1,max=6)
)
c("rnorm", "rpois", "rt", "runif") %>% invoke_map(params, n = 30) %>% unlist %>%  matrix(nrow=30) %>% data.frame %>% View
iris %>% split(.$Species) %>% purrr::map(~ggplot(., aes(Sepal.Length, Sepal.Width))+geom_point())
iris %>% keep(is.factor) %>% names()
iris %>% discard(is.factor) %>% names()
means %>% discard(.<5)
iris %>% every(is.numeric)
iris %>% some(is.factor)
list(mtcars, mpg) %>% reduce(full_join)
list(
c(1, 3, 5, 6, 10),
c(1, 2, 3, 7, 8, 10),
c(1, 2, 3, 4, 8, 9, 10)
) %>% reduce(intersect)
seq_along(iris) %>% accumulate(`*`)
#modeling
models <- data.frame(
a1 = runif(250, -20, 40),
a2 = runif(250, -5, 5)
)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
sim1 %>% data_grid(x)
iris %>% model_matrix(Sepal.Length ~ Sepal.Width)
mtcars %>% lm(mpg ~ wt, data = .) %>% glance
data.frame(
x = I(list(list(1:3), list(3:5))),
y = c("1, 2", "3, 4, 5")
)
purrr::map(iris[-5], safely(log))
iris %>% nest(-Species)
library(tidyverse)
library(picante)
a = 1:20
b = a*3
rep(runif(1,2),20)
rep(runif(1),20)
rep(runif(20),20)
runif(20)
b %<>% .+runif(20)
library(magrittr)
library(magrittr)
b %<>% .+runif(20)
b %<>% b+runif(20)
b <- b+runif(20)
A_B = lm(a~b)
A_B$residuals
install.packages("PHYLOGR")
library("PHYLOGR", lib.loc="/usr/local/lib/R/3.2/site-library")
SimulExample
library("adephylo", lib.loc="/usr/local/lib/R/3.2/site-library")
library("ape", lib.loc="/usr/local/lib/R/3.2/site-library")
library("phylobase", lib.loc="/usr/local/lib/R/3.2/site-library")
library("phytools", lib.loc="/usr/local/lib/R/3.2/site-library")
library("picante", lib.loc="/usr/local/lib/R/3.2/site-library")
library("phangorn")
library("phytools")
library("picante")
library("geiger")
library("phylobase")
library("fields")
library("adephylo")
library("dendextend")
library("profdpm")
library("gplots")
library("scatterplot3d")
library("randomForest")
install.packages("geomorph")
library("geomorph", lib.loc="/usr/local/lib/R/3.2/site-library")
hummingbirds
data(hummingbirds)
data(plethodon)
data("plethShapeFood", "plethspecies")
install.packages("ratematrix")
install.packages("ecodist")
load("/Users/athorybia/Downloads/levin_tree_and_traits.rdata")
View(traits)
setwd("~/Documents/0BIOL_SpatialData/week2")
LVIS <- read.table("LVIS_CR_1998_WAVE_20080112_Barro_Colorado_Island/lvis_cr_1998_wave_20080112_Barro_Colorado_Island_LGW.csv", header=F, sep=",")
dimnames(LVIS)[[2]] <- c("LFID","shotnumber","time","lon0","lat0","z0","lon431","lat431","z431","sigmean",paste("wave",seq(0,431),""))
groundLVIS <- read.table("LVIS_CR_1998_WAVE_20080112_Barro_Colorado_Island/lvis_cr_1998_wave_20080112_Barro_Colorado_Island_LGE.csv", header=F, sep=",")
dimnames(groundLVIS)[[2]] <- c("LFID","shotnumber","time","glon","glat","zg","RH25","RH50","RH75","RH100")
# Concatanate the waveforms and ground
if (dim(LVIS)[1]==dim(groundLVIS)[1]){LVIS <- cbind(LVIS, groundLVIS[,c(4,5,6,7,8,9,10)])}
time2 <- Sys.time()
print(paste("Reading in the LVIS data takes",time2-time1,sep=" "))   # 50 seconds on the Beast
time1 <- Sys.time()
time2 <- Sys.time()
print(paste("Reading in the LVIS data takes",time2-time1,sep=" "))   # 50 seconds on the Beast
LVISfootprintLocations <- SpatialPointsDataFrame(coords=cbind(LVIS$lon0, LVIS$lat0), data=data.frame(seq(1:dim(LVIS)[1])))   # uses glat and glon = the bottom of the waveform
library(rgdal)
LVISfootprintLocations <- SpatialPointsDataFrame(coords=cbind(LVIS$lon0, LVIS$lat0), data=data.frame(seq(1:dim(LVIS)[1])))   # uses glat and glon = the bottom of the waveform
library(rgdal)
install.packages('~/Downloads/rgda.tgz', lib='/usr/local/lib/R/3.2/site-library')
updateR()
View(LVIS)
knitr::opts_chunk$set(echo = TRUE)
#Packages BASIC
library('magrittr')
library('tidyverse')
library('stringr')
#Packages BIO-PHYLO
library('vegan')
library("ape")
library("ggtree")
library("phangorn")
library("phytools")
library("picante")
library("geiger")
library("phylobase")
library("fields")
library("adephylo")
library("geomorph")
#Working directory
setwd("~/Dropbox/siphonophore_phylogeny_2017/character_coding")
#Load data
read.csv('main_characters.csv', header = T, sep = ',') -> cdata
rownames(cdata) = cdata$Species
#Load tree
tree = read.tree('ultimatephylo2017.tre')
tree$tip.label = str_replace_all(tree$tip.label,'_',' ')
tree <- drop.tip(tree, which(!(tree$tip.label %in% rownames(cdata))))
ultratree <- chronos(tree)
#Temporarily prune data
cdata %<>% filter(rownames(.) %in% tree$tip.label)
rownames(cdata) = cdata$Species
cdata %<>% .[-1]
#Named vectors for variables
sex = cdata$Sex
names(sex) = rownames(cdata)
nectosome = cdata$Nectosome
names(nectosome) = rownames(cdata)
necto_pos = cdata$Nectosome.position
names(necto_pos) = rownames(cdata)
necto_types = cdata$Nectophores
names(necto_types) = rownames(cdata)
palpons = cdata$Palpons
names(palpons) = rownames(cdata)
tentilla = cdata$Tentilla
names(tentilla) = rownames(cdata)
pneuma = cdata$Pneumatophore
names(pneuma) = rownames(cdata)
vrange = cdata$Vertical.range
names(vrange) = rownames(cdata)
bracts = cdata$Bract.types
names(bracts) = rownames(cdata)
#Depth pruned data
dpruned_data = cdata[which(!is.na(cdata$Depth.Median)), ]
dpruned_tree <- drop.tip(ultratree, which(!(tree$tip.label %in% rownames(dpruned_data))))
dpruned_data <- dpruned_data[match(dpruned_tree$tip.label, rownames(dpruned_data)),]
depth_median = dpruned_data$Depth.Median
names(depth_median) = rownames(dpruned_data)
depth_mean = dpruned_data$Depth.Mean
names(depth_mean) = rownames(dpruned_data)
depth_min = dpruned_data$Depth.Min
names(depth_min) = rownames(dpruned_data)
depth_max = dpruned_data$Depth.Max
names(depth_max) = rownames(dpruned_data)
depth_sd = dpruned_data$Depth.StdDev
names(depth_sd) = rownames(dpruned_data)
depth_range = depth_max - depth_min
abundance = dpruned_data$Depth.Count
names(abundance) = rownames(dpruned_data)
invisible(make.simmap(ultratree, sex, nsim = 100)) -> sex_sim
invisible(make.simmap(ultratree, tentilla, nsim = 100)) -> tentilla_sim
make.simmap(ultratree, vrange, nsim = 100) -> vrange_sim
vrange_sim %>% plotSimmap(lwd = 4, add = T)
library('magrittr')
library('tidyverse')
library('stringr')
library('vegan')
library("ape")
library("ggtree")
library("phangorn")
library("phytools")
library("picante")
library("geiger")
library("phylobase")
library("fields")
library("adephylo")
library("geomorph")
sex = cdata$Sex
names(sex) = rownames(cdata)
#Working directory
setwd("~/Dropbox/siphonophore_phylogeny_2017/character_coding")
#Load data
read.csv('main_characters.csv', header = T, sep = ',') -> cdata
rownames(cdata) = cdata$Species
#Load tree
tree = read.tree('ultimatephylo2017.tre')
tree$tip.label = str_replace_all(tree$tip.label,'_',' ')
tree <- drop.tip(tree, which(!(tree$tip.label %in% rownames(cdata))))
ultratree <- chronos(tree)
#Temporarily prune data
cdata %<>% filter(rownames(.) %in% tree$tip.label)
rownames(cdata) = cdata$Species
cdata %<>% .[-1]
sex = cdata$Sex
names(sex) = rownames(cdata)
make.simmap(ultratree, sex, nsim = 100) -> sex_sim
sex_sim %>% plotSimmap(lwd = 4, add = T)
plotTree(ultratree, lwd = 4)
#Simmap SEX
make.simmap(ultratree, sex, nsim = 100) -> sex_sim
sex_sim %>% plotSimmap(lwd = 4, add = T)
plotTree(ultratree, lwd = 4)
#Simmap SEX
make.simmap(ultratree, sex, nsim = 100) -> sex_sim
sex_sim %>% plotSimmap(lwd = 4, add = T)
sex_sim %>% plotSimmap(lwd = 4, add = T) -> sexplot
sexplot
sex_sim
sex_sim %>% summary()
